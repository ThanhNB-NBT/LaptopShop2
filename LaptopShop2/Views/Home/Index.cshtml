@using LaptopShop2.Functions;


@{
    ViewData["Title"] = "Trang chủ";
}
<!--Brand Section Begin -->
@await Component.InvokeAsync("BrandView")
<!-- Brand Section End -->
<!-- Featured Section Begin -->
<section class="featured spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="section-title">
                    <h2>Sản phẩm</h2>
                </div>
                <div class="featured__controls">
                    <ul>
                        <li class="active" data-filter="*" onclick="filterProjects('*')">Tất cả</li>
                        @foreach (var category in ViewBag.Categories)
                        {
                            <li data-filter=".filter-@category.CategoryProductId" class="category-item" onclick="filterProjects('@category.CategoryProductId')">@category.Name</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        <div class="row featured__filter">
            @foreach (var products in ViewBag.Products)
            {
                string url = Function.TitleSlugGeneration("Product", products.ProductName, products.ProductId);
                <div class="col-lg-3 col-md-4 col-sm-6 featured__item filter-@products.CategoryProductId">
                    <div class="featured__item__pic set-bg" data-setbg="@products.Image">
                        <ul class="featured__item__pic__hover">
                            <li><a href="#"><i class="fa fa-heart"></i></a></li>
                            <li><a href="#"><i class="fa fa-retweet"></i></a></li>
                            <li><a class="add-to-cart" data-product-id="@products.ProductId"><i class="fa fa-shopping-cart"></i></a></li>
                        </ul>
                    </div>
                    <div class="featured__item__text">
                        <h6><a href="/@url">@products.ProductName</a></h6>
                        @if (products.Discount > 0)
                        {
                            <del><span style="color: red; font-size: 16px;">@Function.FormatCurrency(products.Price)</span></del>
                            <div class="discount-price-home">
                                <span class="discounted-price-home">@Function.FormatCurrency(products.DiscountedPrice)</span>
                            </div>
                        }
                        else
                        {
                            <span style="font-size: 16px;">@Function.FormatCurrency(products.Price)</span>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</section>

<!-- Featured Section End -->

<!-- Latest Product Section Begin -->
<section class="latest-product spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-4 col-md-6">
                <div class="latest-product__text">
                    <h4>Sản phẩm mới</h4>
                    <div class="latest-product__slider owl-carousel">
                        @await Component.InvokeAsync("LastestProduct")
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-md-6">
                <div class="latest-product__text">
                    <h4>Sản phẩm bán chạy</h4>
                    <div class="latest-product__slider owl-carousel">
                        @await Component.InvokeAsync("TopRatedProducts")
                        
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-md-6">
                <div class="latest-product__text">
                    <h4>Khuyễn mãi tốt</h4>
                    <div class="latest-product__slider owl-carousel">
                        @await Component.InvokeAsync("DiscountProducts")
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Latest Product Section End -->
<!-- Blog Section Begin -->
<section class="from-blog spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="section-title from-blog__title">
                    <h2>Tin tức</h2>
                </div>
            </div>
        </div>
        <div class="row">
            @await Component.InvokeAsync("RecentNew")
        </div>
    </div>
</section>

<!-- Blog Section End -->
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Tự động kích hoạt bộ lọc "All" khi tải trang
            filterProjects('*');

            // Thêm sự kiện click cho từng mục danh mục
            var categoryItems = document.getElementsByClassName("category-item");
            for (var i = 0; i < categoryItems.length; i++) {
                categoryItems[i].addEventListener("click", function () {
                    var categoryId = this.getAttribute("data-filter").replace(".filter-", "");
                    filterProjects(categoryId);
                });
            }
        });

        function filterProjects(categoryId) {
            console.log("Selected CategoryId: ", categoryId);

            var allProducts = document.getElementsByClassName("featured__item");
            for (var i = 0; i < allProducts.length; i++) {
                var product = allProducts[i];

                if (categoryId === '*') {
                    product.style.display = "block"; // Hiển thị tất cả sản phẩm nếu chọn "All"
                } else {
                    var hasCategory = product.classList.contains("filter-" + categoryId);
                    product.style.display = hasCategory ? "block" : "none"; // Hiển thị hoặc ẩn sản phẩm theo danh mục
                }
            }
        }
    </script>
}
